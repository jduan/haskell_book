Exercises: Understanding Folds

1. c

2.
foldl (flip (*)) 1 [1..3]
(((1 * 1) * 2 ) * 3)
((1 * 2) * 3)
(2 * 3)
6

3. c

4. a

5.
a) foldr (++) "" ["woot", "WOOT", "woot"]
b) foldr max 'a' "fear is the little death"
c) foldr (&&) True [False , True]
d) foldr (||) True [False, True]
e) foldr ((++) . show) "" [1..5]
f) foldl const 'a' [1..5]
g) foldl const 0 "tacos"
h) foldr (flip const) 0 "burritos"
i) foldr (flip const) 'z' [1..5]


!!! I don't understand how this works?
fibs = 1 : scanl (+) 1 fibs


Scan Exercises

1.
fibs = take 20 $ 1 : scanl (+) 1 fibs

2.
fibs = takeWhile (< 100) $ 1 : scanl (+) 1 fibs

3.
factorial = scanl (*) 1 $ [1..]
